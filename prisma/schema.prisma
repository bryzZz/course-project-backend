// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @unique @default(uuid())
  email         String         @unique
  name          String
  password      String
  Menus         Menu[]
  refreshTokens RefreshToken[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model RefreshToken {
  id        String   @id @unique @default(uuid())
  token     String   @db.Text
  userId    String
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Menu {
  id          String   @id @unique @default(uuid())
  title       String
  description String?
  footer      String?
  image       String?
  Blocks      Block[]
  isPublished Boolean  @default(true)
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Block {
  id        String     @id @unique @default(uuid())
  place     Int
  type      BlockType
  Dish      Dish?
  Separator Separator?
  menu      Menu       @relation(fields: [menuId], references: [id], onDelete: Cascade)
  menuId    String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Dish {
  id          String @id @unique @default(uuid())
  image       String
  name        String
  description String @db.Text
  block       Block  @relation(fields: [blockId], references: [id], onDelete: Cascade)
  blockId     String @unique
}

model Separator {
  id      String  @id @unique @default(uuid())
  text    String?
  block   Block   @relation(fields: [blockId], references: [id], onDelete: Cascade)
  blockId String  @unique
}

enum BlockType {
  Dish
  Separator
}
